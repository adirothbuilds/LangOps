name: Static Analysis and Testing

on:
  push:
    branches:
      - main
    paths:
      - 'tests/**'
      - 'langops/**'
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths:
      - 'tests/**'
      - 'langops/**'
      - 'docs/**'
jobs:
  build:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: .

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Poetry & pip & .venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.in-project true
      
      - name: Install dependencies
        run: make install-dev

      - name: Run lint
        run: make lint

      - name: Run tests
        run: make coverage

      - name: Patch coverage for Sonar
        run: |
          echo "Patching coverage.xml for Sonar"
          sed -i 's|<source>.*</source>|<source>langops</source>|' coverage.xml

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-for-sonar
          path: coverage.xml

  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: .

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-for-sonar
      
      - name: Show path and coverage file
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Coverage file path: $(find . -name 'coverage.xml')"
          echo "Coverage file exists: $(test -f coverage.xml && echo 'Yes' || echo 'No')"
          echo "Coverage file content:"
          head coverage.xml -n 80 || echo "Coverage file is empty or does not exist"
          echo "init files in the project:"
          find . -name '__init__.py'
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          args: >
            -Dsonar.projectKey=adirothbuilds_AgentOps
            -Dsonar.organization=adirothbuilds
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/tests/**,**/demo/**,**/docs/**,docker-compose.docs.yml,Dockerfile.langops.docs,mkdocs.yml
            -Dsonar.python.version=3.11
            -Dsonar.coverage.exclusions=**/tests/**,**/demo/**,**/docs/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
